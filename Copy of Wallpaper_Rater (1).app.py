{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1U5__Z2RviIj9RYk23lK-NE0K_6hWe5a1","timestamp":1724773238816}],"authorship_tag":"ABX9TyOx2pg0sgMV1o1yuzJfnSFi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install streamlit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SPy3zy34dw_d","executionInfo":{"status":"ok","timestamp":1724772725278,"user_tz":240,"elapsed":3851,"user":{"displayName":"Josiah P","userId":"12039509403664990249"}},"outputId":"8721fdc8-d46d-46ca-faf5-8d2c302c5029"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: streamlit in /usr/local/lib/python3.10/dist-packages (1.37.1)\n","Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n","Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n","Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n","Requirement already satisfied: numpy<3,>=1.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.26.4)\n","Requirement already satisfied: packaging<25,>=20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.1)\n","Requirement already satisfied: pandas<3,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.1.4)\n","Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n","Requirement already satisfied: protobuf<6,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (14.0.2)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.7.1)\n","Requirement already satisfied: tenacity<9,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.5.0)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.12.2)\n","Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.1.43)\n","Requirement already satisfied: pydeck<1,>=0.8.0b4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.9.1)\n","Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\n","Requirement already satisfied: watchdog<5,>=2.1.5 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.0.2)\n","Requirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.23.0)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.1)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2024.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2024.7.4)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.16.1)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.5)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (24.2.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.12.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.20.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.3.0->streamlit) (1.16.0)\n"]}]},{"cell_type":"code","source":["import streamlit as st\n","import cv2\n","import numpy as np\n","from PIL import Image\n","\n","# Define custom text outputs for each rating possibility\n","rating_texts = {\n","    -10: \"L WALLPAPER ðŸ˜‚\",\n","    -9: \"Absolute trash.\",\n","    -8: \"Terrible wallpaper\",\n","    -7: \"Awful just awful\",\n","    -6: \"Get a new wallpaper ASAP (rocky)\",\n","    -5: \"Pretty damn bad\",\n","    -4: \"Very bad\",\n","    -3: \"Very bad\",\n","    -2: \"WAY Below average. Needs work.\",\n","    -1: \"Awful\",\n","    0: \"Zero. Cmon dude\",\n","    1: \"Not good at all\",\n","    2: \"It should probably be lower.\",\n","    3: \"L wallpaper\",\n","    4: \"Big L Wallpaper\",\n","    5: \"Mid\",\n","    6: \"Above mid\",\n","    7: \"Not bad\",\n","    8: \"Pretty good\",\n","    9: \"Exceptional quality. Very impressive.\",\n","    10: \"W Wallpaper ðŸ’¯\"\n","}\n","\n","def is_blurry(image):\n","    \"\"\" Check if the image is blurry \"\"\"\n","    variance = cv2.Laplacian(image, cv2.CV_64F).var()\n","    return variance < 100\n","\n","def check_resolution(image):\n","    \"\"\" Check if the image resolution is sufficient \"\"\"\n","    width, height = image.size\n","    return width >= 1920 and height >= 1080\n","\n","def check_color_balance(image):\n","    \"\"\" Check if the color balance is acceptable \"\"\"\n","    img_np = np.array(image)\n","    mean_brightness = np.mean(img_np)\n","    return mean_brightness > 50 and mean_brightness < 200  # Example thresholds\n","\n","def check_sharpness(image):\n","    \"\"\" Check if the image is sharp \"\"\"\n","    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n","    laplacian_var = cv2.Laplacian(gray, cv2.CV_64F).var()\n","    return laplacian_var > 100\n","\n","def check_contrast(image):\n","    \"\"\" Check the contrast of the image \"\"\"\n","    img_np = np.array(image)\n","    min_pixel = np.min(img_np)\n","    max_pixel = np.max(img_np)\n","    return (max_pixel - min_pixel) > 50  # Example threshold\n","\n","def check_color_vibrancy(image):\n","    \"\"\" Check color vibrancy of the image \"\"\"\n","    img_np = np.array(image)\n","    mean_color = np.mean(img_np, axis=(0, 1))\n","    return np.std(mean_color) > 50  # Example threshold\n","\n","def rate_image(image_path):\n","    \"\"\" Rate the image based on various criteria \"\"\"\n","    # Load image\n","    image = Image.open(image_path)\n","    image_cv = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)\n","\n","    # Initialize score\n","    score = 10\n","\n","    # Apply criteria\n","    if is_blurry(image_cv):\n","        score -= 5\n","    if not check_resolution(image):\n","        score -= 2\n","    else:\n","        score += 1\n","    if not check_color_balance(image):\n","        score -= 2\n","    if not check_sharpness(image_cv):\n","        score -= 2\n","    if not check_contrast(image):\n","        score -= 2\n","    if not check_color_vibrancy(image):\n","        score -= 1\n","\n","    # Ensure score is within the range of -10 to 10\n","    score = max(-10, min(score, 10))\n","\n","    # Return rating text based on score\n","    return rating_texts.get(score, \"Rating not available\")\n","\n","# Streamlit code for UI\n","st.title(\"Wallpaper Rating System\")\n","\n","uploaded_file = st.file_uploader(\"Choose an image...\", type=\"jpg\")\n","if uploaded_file is not None:\n","    # Save the file to a temporary location\n","    with open(\"temp.jpg\", \"wb\") as f:\n","        f.write(uploaded_file.getvalue())\n","\n","    st.image(uploaded_file, caption=\"Uploaded Image\", use_column_width=True)\n","\n","    rating = rate_image(\"temp.jpg\")\n","    st.write(f\"Rating: {rating}\")\n"],"metadata":{"id":"iHN2CJTSd5BQ"},"execution_count":null,"outputs":[]}]}